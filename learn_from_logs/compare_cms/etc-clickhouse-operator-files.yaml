apiVersion: v1
data:
  config.yaml: |
    # IMPORTANT
    # This file is auto-generated
    # Do not edit this file - all changes would be lost
    # Edit appropriate template in the following folder:
    # deploy/builder/templates-config
    # IMPORTANT
    #
    # Template parameters available:
    #   WATCH_NAMESPACES=
    #   CH_USERNAME_PLAIN=
    #   CH_PASSWORD_PLAIN=
    #   CH_CREDENTIALS_SECRET_NAMESPACE=
    #   CH_CREDENTIALS_SECRET_NAME=clickhouse-operator
    #   VERBOSITY=1

    ################################################
    ##
    ## Watch section
    ##
    ################################################
    watch:
      # List of namespaces where clickhouse-operator watches for events.
      # Concurrently running operators should watch on different namespaces.
      # IMPORTANT
      # Regexp is applicable.
      #namespaces: ["dev", "test"]
      namespaces: []

    clickhouse:
      configuration:
        ################################################
        ##
        ## Configuration files section
        ##
        ################################################
        file:
          # Each 'path' can be either absolute or relative.
          # In case path is absolute - it is used as is
          # In case path is relative - it is relative to the folder where configuration file you are reading right now is located.
          path:
            # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
            common: config.d
            # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
            host: conf.d
            # Path to the folder where ClickHouse configuration files with users' settings are located.
            # Files are common for all instances within a CHI.
            user: users.d
        ################################################
        ##
        ## Configuration users section
        ##
        ################################################
        user:
          # Default settings for user accounts, created by the operator.
          # IMPORTANT. These are not access credentials or settings for 'default' user account,
          # it is a template for filling out missing fields for all user accounts to be created by the operator,
          # with the following EXCEPTIONS:
          # 1. 'default' user account DOES NOT use provided password, but uses all the rest of the fields.
          #    Password for 'default' user account has to be provided explicitly, if to be used.
          # 2. CHOP user account DOES NOT use:
          #    - profile setting. It uses predefined profile called 'clickhouse_operator'
          #    - quota setting. It uses empty quota name.
          #    - networks IP setting. Operator specifies 'networks/ip' user setting to match operators' pod IP only.
          #    - password setting. Password for CHOP account is used from 'clickhouse.access.*' section
          default:
            # Default values for ClickHouse user account(s) created by the operator
            #   1. user/profile - string
            #   2. user/quota - string
            #   3. user/networks/ip - multiple strings
            #   4. user/password - string
            # These values can be overwritten on per-user basis.
            profile: "default"
            quota: "default"
            networksIP:
              - "::1"
              - "127.0.0.1"
            password: "default"
        ################################################
        ##
        ## Configuration network section
        ##
        ################################################
        network:
          # Default host_regexp to limit network connectivity from outside
          hostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"

      ################################################
      ##
      ## Configuration restart policy section
      ## Configuration restart policy describes what configuration changes require ClickHouse restart
      ##
      ################################################
      configurationRestartPolicy:
        rules:
          # IMPORTANT!
          # Special version of "*" - default version - has to satisfy all ClickHouse versions.
          # Default version will also be used in case ClickHouse version is unknown.
          # ClickHouse version may be unknown due to host being down - for example, because of incorrect "settings" section.
          # ClickHouse is not willing to start in case incorrect/unknown settings are provided in config file.
          - version: "*"
            rules:
              # see https://kb.altinity.com/altinity-kb-setup-and-maintenance/altinity-kb-server-config-files/#server-config-configxml-sections-which-dont-require-restart
              # to be replaced with "select * from system.server_settings where changeable_without_restart = 'No'"

              - settings/*: "yes"

              # single values
              - settings/access_control_path: "no"
              - settings/dictionaries_config: "no"
              - settings/max_server_memory_*: "no"
              - settings/max_*_to_drop: "no"
              - settings/max_concurrent_queries: "no"
              - settings/models_config: "no"
              - settings/user_defined_executable_functions_config: "no"

              # structured XML
              - settings/logger/*: "no"
              - settings/macros/*: "no"
              - settings/remote_servers/*: "no"
              - settings/user_directories/*: "no"

              - zookeeper/*: "yes"

              - files/*.xml: "yes"
              - files/config.d/*.xml: "yes"
              - files/config.d/*dict*.xml: "no"

              # exceptions in default profile
              - profiles/default/background_*_pool_size: "yes"
              - profiles/default/max_*_for_server: "yes"
          - version: "21.*"
            rules:
              - settings/logger: "yes"

      #################################################
      ##
      ## Access to ClickHouse instances
      ##
      ################################################
      access:
        # Possible values for 'scheme' are:
        #   1. http - force http to be used to connect to ClickHouse instances
        #   2. https - force https to be used to connect to ClickHouse instances
        #   3. auto - either http or https is selected based on open ports
        scheme: "auto"
        # ClickHouse credentials (username, password and port) to be used by the operator to connect to ClickHouse instances.
        # These credentials are used for:
        #   1. Metrics requests
        #   2. Schema maintenance
        #   3. DROP DNS CACHE
        # User with these credentials can be specified in additional ClickHouse .xml config files,
        # located in 'clickhouse.configuration.file.path.user' folder
        username: ""
        password: ""
        rootCA: ""

        # Location of the k8s Secret with username and password to be used by the operator to connect to ClickHouse instances.
        # Can be used instead of explicitly specified username and password available in sections:
        #   - clickhouse.access.username
        #   - clickhouse.access.password
        # Secret should have two keys:
        #   1. username
        #   2. password
        secret:
          # Empty `namespace` means that k8s secret would be looked in the same namespace where operator's pod is running.
          namespace: ""
          # Empty `name` means no k8s Secret would be looked for
          name: "clickhouse-operator"
        # Port where to connect to ClickHouse instances to
        port: 8123

        # Timeouts used to limit connection and queries from the operator to ClickHouse instances
        # Specified in seconds.
        timeouts:
          # Timout to setup connection from the operator to ClickHouse instances. In seconds.
          connect: 1
          # Timout to perform SQL query from the operator to ClickHouse instances. In seconds.
          query: 4

      #################################################
      ##
      ## Metrics collection
      ##
      ################################################

      metrics:
        # Timeouts used to limit connection and queries from the metrics exporter to ClickHouse instances
        # Specified in seconds.
        timeouts:
          # Timeout used to limit metrics collection request. In seconds.
          # Upon reaching this timeout metrics collection is aborted and no more metrics are collected in this cycle.
          # All collected metrics are returned.
          collect: 9

    ################################################
    ##
    ## Template(s) management section
    ##
    ################################################
    template:
      chi:
        # CHI template updates handling policy
        # Possible policy values:
        #   - ReadOnStart. Accept CHIT updates on the operators start only.
        #   - ApplyOnNextReconcile. Accept CHIT updates at all time. Apply news CHITs on next regular reconcile of the CHI
        policy: ApplyOnNextReconcile

        # Path to the folder where ClickHouseInstallation templates .yaml manifests are located.
        # Templates are added to the list of all templates and used when CHI is reconciled.
        # Templates are applied in sorted alpha-numeric order.
        path: templates.d

    ################################################
    ##
    ## Reconcile section
    ##
    ################################################
    reconcile:
      # Reconcile runtime settings
      runtime:
        # Max number of concurrent CHI reconciles in progress
        reconcileCHIsThreadsNumber: 10

        # The operator reconciles shards concurrently in each CHI with the following limitations:
        #   1. Number of shards being reconciled (and thus having hosts down) in each CHI concurrently
        #      can not be greater than 'reconcileShardsThreadsNumber'.
        #   2. Percentage of shards being reconciled (and thus having hosts down) in each CHI concurrently
        #      can not be greater than 'reconcileShardsMaxConcurrencyPercent'.
        #   3. The first shard is always reconciled alone. Concurrency starts from the second shard and onward.
        # Thus limiting number of shards being reconciled (and thus having hosts down) in each CHI by both number and percentage

        # Max number of concurrent shard reconciles within one CHI in progress
        reconcileShardsThreadsNumber: 5
        # Max percentage of concurrent shard reconciles within one CHI in progress
        reconcileShardsMaxConcurrencyPercent: 50

      # Reconcile StatefulSet scenario
      statefulSet:
        # Create StatefulSet scenario
        create:
          # What to do in case created StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
          # Possible options:
          # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
          #    do not try to fix or delete or update it, just abort reconcile cycle.
          #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
          # 2. delete - delete newly created problematic StatefulSet and follow 'abort' path afterwards.
          # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
          onFailure: ignore

        # Update StatefulSet scenario
        update:
          # How many seconds to wait for created/updated StatefulSet to be 'Ready'
          timeout: 300
          # How many seconds to wait between checks/polls for created/updated StatefulSet status
          pollInterval: 5
          # What to do in case updated StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
          # Possible options:
          # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
          #    do not try to fix or delete or update it, just abort reconcile cycle.
          #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
          # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
          #    Pod would be recreated by StatefulSet based on rollback-ed StatefulSet configuration.
          #    Follow 'abort' path afterwards.
          # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
          onFailure: abort

      # Reconcile Host scenario
      host:
        # Whether the operator during reconcile procedure should wait for a ClickHouse host:
        #   - to be excluded from a ClickHouse cluster
        #   - to complete all running queries
        #   - to be included into a ClickHouse cluster
        # respectfully before moving forward
        wait:
          exclude: true
          queries: true
          include: false

    ################################################
    ##
    ## Annotations management section
    ##
    ################################################
    annotation:
      # Applied when:
      #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,
      #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,
      # Include annotations from the following list:
      # Applied only when not empty. Empty list means "include all, no selection"
      include: []
      # Exclude annotations from the following list:
      exclude: []

    ################################################
    ##
    ## Labels management section
    ##
    ################################################
    label:
      # Applied when:
      #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,
      #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,
      # Include labels from the following list:
      # Applied only when not empty. Empty list means "include all, no selection"
      include: []
      # Exclude labels from the following list:
      # Applied only when not empty. Empty list means "nothing to exclude, no selection"
      exclude: []
      # Whether to append *Scope* labels to StatefulSet and Pod.
      # Full list of available *scope* labels check in 'labeler.go'
      #  LabelShardScopeIndex
      #  LabelReplicaScopeIndex
      #  LabelCHIScopeIndex
      #  LabelCHIScopeCycleSize
      #  LabelCHIScopeCycleIndex
      #  LabelCHIScopeCycleOffset
      #  LabelClusterScopeIndex
      #  LabelClusterScopeCycleSize
      #  LabelClusterScopeCycleIndex
      #  LabelClusterScopeCycleOffset
      appendScope: "no"

    ################################################
    ##
    ## StatefulSet management section
    ##
    ################################################
    statefulSet:
      revisionHistoryLimit: 0

    ################################################
    ##
    ## Pod management section
    ##
    ################################################
    pod:
      # Grace period for Pod termination.
      # How many seconds to wait between sending
      # SIGTERM and SIGKILL during Pod termination process.
      # Increase this number is case of slow shutdown.
      terminationGracePeriod: 30

    ################################################
    ##
    ## Log parameters section
    ##
    ################################################
    logger:
      logtostderr: "true"
      alsologtostderr: "false"
      v: "1"
      stderrthreshold: ""
      vmodule: ""
      log_backtrace_at: ""
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"config.yaml":"# IMPORTANT\n# This file is auto-generated\n# Do not edit this file - all changes would be lost\n# Edit appropriate template in the following folder:\n# deploy/builder/templates-config\n# IMPORTANT\n#\n# Template parameters available:\n#   WATCH_NAMESPACES=\n#   CH_USERNAME_PLAIN=\n#   CH_PASSWORD_PLAIN=\n#   CH_CREDENTIALS_SECRET_NAMESPACE=\n#   CH_CREDENTIALS_SECRET_NAME=clickhouse-operator\n#   VERBOSITY=1\n\n################################################\n##\n## Watch section\n##\n################################################\nwatch:\n  # List of namespaces where clickhouse-operator watches for events.\n  # Concurrently running operators should watch on different namespaces.\n  # IMPORTANT\n  # Regexp is applicable.\n  #namespaces: [\"dev\", \"test\"]\n  namespaces: []\n\nclickhouse:\n  configuration:\n    ################################################\n    ##\n    ## Configuration files section\n    ##\n    ################################################\n    file:\n      # Each 'path' can be either absolute or relative.\n      # In case path is absolute - it is used as is\n      # In case path is relative - it is relative to the folder where configuration file you are reading right now is located.\n      path:\n        # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.\n        common: config.d\n        # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.\n        host: conf.d\n        # Path to the folder where ClickHouse configuration files with users' settings are located.\n        # Files are common for all instances within a CHI.\n        user: users.d\n    ################################################\n    ##\n    ## Configuration users section\n    ##\n    ################################################\n    user:\n      # Default settings for user accounts, created by the operator.\n      # IMPORTANT. These are not access credentials or settings for 'default' user account,\n      # it is a template for filling out missing fields for all user accounts to be created by the operator,\n      # with the following EXCEPTIONS:\n      # 1. 'default' user account DOES NOT use provided password, but uses all the rest of the fields.\n      #    Password for 'default' user account has to be provided explicitly, if to be used.\n      # 2. CHOP user account DOES NOT use:\n      #    - profile setting. It uses predefined profile called 'clickhouse_operator'\n      #    - quota setting. It uses empty quota name.\n      #    - networks IP setting. Operator specifies 'networks/ip' user setting to match operators' pod IP only.\n      #    - password setting. Password for CHOP account is used from 'clickhouse.access.*' section\n      default:\n        # Default values for ClickHouse user account(s) created by the operator\n        #   1. user/profile - string\n        #   2. user/quota - string\n        #   3. user/networks/ip - multiple strings\n        #   4. user/password - string\n        # These values can be overwritten on per-user basis.\n        profile: \"default\"\n        quota: \"default\"\n        networksIP:\n          - \"::1\"\n          - \"127.0.0.1\"\n        password: \"default\"\n    ################################################\n    ##\n    ## Configuration network section\n    ##\n    ################################################\n    network:\n      # Default host_regexp to limit network connectivity from outside\n      hostRegexpTemplate: \"(chi-{chi}-[^.]+\\\\d+-\\\\d+|clickhouse\\\\-{chi})\\\\.{namespace}\\\\.svc\\\\.cluster\\\\.local$\"\n\n  ################################################\n  ##\n  ## Configuration restart policy section\n  ## Configuration restart policy describes what configuration changes require ClickHouse restart\n  ##\n  ################################################\n  configurationRestartPolicy:\n    rules:\n      # IMPORTANT!\n      # Special version of \"*\" - default version - has to satisfy all ClickHouse versions.\n      # Default version will also be used in case ClickHouse version is unknown.\n      # ClickHouse version may be unknown due to host being down - for example, because of incorrect \"settings\" section.\n      # ClickHouse is not willing to start in case incorrect/unknown settings are provided in config file.\n      - version: \"*\"\n        rules:\n          # see https://kb.altinity.com/altinity-kb-setup-and-maintenance/altinity-kb-server-config-files/#server-config-configxml-sections-which-dont-require-restart\n          # to be replaced with \"select * from system.server_settings where changeable_without_restart = 'No'\"\n\n          - settings/*: \"yes\"\n\n          # single values\n          - settings/access_control_path: \"no\"\n          - settings/dictionaries_config: \"no\"\n          - settings/max_server_memory_*: \"no\"\n          - settings/max_*_to_drop: \"no\"\n          - settings/max_concurrent_queries: \"no\"\n          - settings/models_config: \"no\"\n          - settings/user_defined_executable_functions_config: \"no\"\n\n          # structured XML\n          - settings/logger/*: \"no\"\n          - settings/macros/*: \"no\"\n          - settings/remote_servers/*: \"no\"\n          - settings/user_directories/*: \"no\"\n\n          - zookeeper/*: \"yes\"\n\n          - files/*.xml: \"yes\"\n          - files/config.d/*.xml: \"yes\"\n          - files/config.d/*dict*.xml: \"no\"\n\n          # exceptions in default profile\n          - profiles/default/background_*_pool_size: \"yes\"\n          - profiles/default/max_*_for_server: \"yes\"\n      - version: \"21.*\"\n        rules:\n          - settings/logger: \"yes\"\n\n  #################################################\n  ##\n  ## Access to ClickHouse instances\n  ##\n  ################################################\n  access:\n    # Possible values for 'scheme' are:\n    #   1. http - force http to be used to connect to ClickHouse instances\n    #   2. https - force https to be used to connect to ClickHouse instances\n    #   3. auto - either http or https is selected based on open ports\n    scheme: \"auto\"\n    # ClickHouse credentials (username, password and port) to be used by the operator to connect to ClickHouse instances.\n    # These credentials are used for:\n    #   1. Metrics requests\n    #   2. Schema maintenance\n    #   3. DROP DNS CACHE\n    # User with these credentials can be specified in additional ClickHouse .xml config files,\n    # located in 'clickhouse.configuration.file.path.user' folder\n    username: \"\"\n    password: \"\"\n    rootCA: \"\"\n\n    # Location of the k8s Secret with username and password to be used by the operator to connect to ClickHouse instances.\n    # Can be used instead of explicitly specified username and password available in sections:\n    #   - clickhouse.access.username\n    #   - clickhouse.access.password\n    # Secret should have two keys:\n    #   1. username\n    #   2. password\n    secret:\n      # Empty `namespace` means that k8s secret would be looked in the same namespace where operator's pod is running.\n      namespace: \"\"\n      # Empty `name` means no k8s Secret would be looked for\n      name: \"clickhouse-operator\"\n    # Port where to connect to ClickHouse instances to\n    port: 8123\n\n    # Timeouts used to limit connection and queries from the operator to ClickHouse instances\n    # Specified in seconds.\n    timeouts:\n      # Timout to setup connection from the operator to ClickHouse instances. In seconds.\n      connect: 1\n      # Timout to perform SQL query from the operator to ClickHouse instances. In seconds.\n      query: 4\n\n  #################################################\n  ##\n  ## Metrics collection\n  ##\n  ################################################\n\n  metrics:\n    # Timeouts used to limit connection and queries from the metrics exporter to ClickHouse instances\n    # Specified in seconds.\n    timeouts:\n      # Timeout used to limit metrics collection request. In seconds.\n      # Upon reaching this timeout metrics collection is aborted and no more metrics are collected in this cycle.\n      # All collected metrics are returned.\n      collect: 9\n\n################################################\n##\n## Template(s) management section\n##\n################################################\ntemplate:\n  chi:\n    # CHI template updates handling policy\n    # Possible policy values:\n    #   - ReadOnStart. Accept CHIT updates on the operators start only.\n    #   - ApplyOnNextReconcile. Accept CHIT updates at all time. Apply news CHITs on next regular reconcile of the CHI\n    policy: ApplyOnNextReconcile\n\n    # Path to the folder where ClickHouseInstallation templates .yaml manifests are located.\n    # Templates are added to the list of all templates and used when CHI is reconciled.\n    # Templates are applied in sorted alpha-numeric order.\n    path: templates.d\n\n################################################\n##\n## Reconcile section\n##\n################################################\nreconcile:\n  # Reconcile runtime settings\n  runtime:\n    # Max number of concurrent CHI reconciles in progress\n    reconcileCHIsThreadsNumber: 10\n\n    # The operator reconciles shards concurrently in each CHI with the following limitations:\n    #   1. Number of shards being reconciled (and thus having hosts down) in each CHI concurrently\n    #      can not be greater than 'reconcileShardsThreadsNumber'.\n    #   2. Percentage of shards being reconciled (and thus having hosts down) in each CHI concurrently\n    #      can not be greater than 'reconcileShardsMaxConcurrencyPercent'.\n    #   3. The first shard is always reconciled alone. Concurrency starts from the second shard and onward.\n    # Thus limiting number of shards being reconciled (and thus having hosts down) in each CHI by both number and percentage\n\n    # Max number of concurrent shard reconciles within one CHI in progress\n    reconcileShardsThreadsNumber: 5\n    # Max percentage of concurrent shard reconciles within one CHI in progress\n    reconcileShardsMaxConcurrencyPercent: 50\n\n  # Reconcile StatefulSet scenario\n  statefulSet:\n    # Create StatefulSet scenario\n    create:\n      # What to do in case created StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds\n      # Possible options:\n      # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,\n      #    do not try to fix or delete or update it, just abort reconcile cycle.\n      #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.\n      # 2. delete - delete newly created problematic StatefulSet and follow 'abort' path afterwards.\n      # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.\n      onFailure: ignore\n\n    # Update StatefulSet scenario\n    update:\n      # How many seconds to wait for created/updated StatefulSet to be 'Ready'\n      timeout: 300\n      # How many seconds to wait between checks/polls for created/updated StatefulSet status\n      pollInterval: 5\n      # What to do in case updated StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds\n      # Possible options:\n      # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,\n      #    do not try to fix or delete or update it, just abort reconcile cycle.\n      #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.\n      # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.\n      #    Pod would be recreated by StatefulSet based on rollback-ed StatefulSet configuration.\n      #    Follow 'abort' path afterwards.\n      # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.\n      onFailure: abort\n\n  # Reconcile Host scenario\n  host:\n    # Whether the operator during reconcile procedure should wait for a ClickHouse host:\n    #   - to be excluded from a ClickHouse cluster\n    #   - to complete all running queries\n    #   - to be included into a ClickHouse cluster\n    # respectfully before moving forward\n    wait:\n      exclude: true\n      queries: true\n      include: false\n\n################################################\n##\n## Annotations management section\n##\n################################################\nannotation:\n  # Applied when:\n  #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,\n  #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,\n  # Include annotations from the following list:\n  # Applied only when not empty. Empty list means \"include all, no selection\"\n  include: []\n  # Exclude annotations from the following list:\n  exclude: []\n\n################################################\n##\n## Labels management section\n##\n################################################\nlabel:\n  # Applied when:\n  #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,\n  #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,\n  # Include labels from the following list:\n  # Applied only when not empty. Empty list means \"include all, no selection\"\n  include: []\n  # Exclude labels from the following list:\n  # Applied only when not empty. Empty list means \"nothing to exclude, no selection\"\n  exclude: []\n  # Whether to append *Scope* labels to StatefulSet and Pod.\n  # Full list of available *scope* labels check in 'labeler.go'\n  #  LabelShardScopeIndex\n  #  LabelReplicaScopeIndex\n  #  LabelCHIScopeIndex\n  #  LabelCHIScopeCycleSize\n  #  LabelCHIScopeCycleIndex\n  #  LabelCHIScopeCycleOffset\n  #  LabelClusterScopeIndex\n  #  LabelClusterScopeCycleSize\n  #  LabelClusterScopeCycleIndex\n  #  LabelClusterScopeCycleOffset\n  appendScope: \"no\"\n\n################################################\n##\n## StatefulSet management section\n##\n################################################\nstatefulSet:\n  revisionHistoryLimit: 0\n\n################################################\n##\n## Pod management section\n##\n################################################\npod:\n  # Grace period for Pod termination.\n  # How many seconds to wait between sending\n  # SIGTERM and SIGKILL during Pod termination process.\n  # Increase this number is case of slow shutdown.\n  terminationGracePeriod: 30\n\n################################################\n##\n## Log parameters section\n##\n################################################\nlogger:\n  logtostderr: \"true\"\n  alsologtostderr: \"false\"\n  v: \"1\"\n  stderrthreshold: \"\"\n  vmodule: \"\"\n  log_backtrace_at: \"\"\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"clickhouse-operator","clickhouse.altinity.com/chop":"0.23.5"},"name":"etc-clickhouse-operator-files","namespace":"test"}}
  creationTimestamp: "2024-06-13T10:51:57Z"
  labels:
    app: clickhouse-operator
    clickhouse.altinity.com/chop: 0.23.5
  name: etc-clickhouse-operator-files
  namespace: test
  resourceVersion: "302"
  uid: 0f6d8bba-2c3e-4f1d-b756-884e37c74c19
